# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
        working-directory: Strohm

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Cache things
        uses: actions/cache@v2
        env:
          cache-name: cache-m2
        with:
          path: |
            ~/.m2
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Strohm/**/deps.edn', 'Strohm/**/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install prerequisites
        run: brew install clojure/tools/clojure

      - name: Prepare
        run: yarn install --frozen-lockfile

      - name: Test ClojureScript
        run: yarn shadow-cljs compile :test

      - name: Release ClojureScript
        run: yarn shadow-cljs release :strohm

      - name: Test iOS
        run: |
          cd ios/Strohm
          swift package generate-xcodeproj
          xcodebuild -project Strohm.xcodeproj -scheme Strohm-Package -destination 'platform=iOS Simulator,name=iPhone 12'

      - name: Test Android
        run: |
          cd android
          ./gradlew test
